## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":11,"name":"The Manger","email":"manger@example.com","email_verified_at":"2024-06-15T13:17:59.000000Z","is_manger":true,"created_at":"2024-06-15T13:17:59.000000Z","updated_at":"2024-06-15T13:17:59.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/tickets
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"ticket","id":1,"attributes":{"title":"sint voluptas enim","status":"X","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":5},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/1"}},{"type":"ticket","id":2,"attributes":{"title":"maiores totam inventore","status":"A","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":3},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/2"}},{"type":"ticket","id":3,"attributes":{"title":"eligendi quaerat ut","status":"C","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":4},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/3"}},{"type":"ticket","id":4,"attributes":{"title":"perspiciatis beatae pariatur","status":"H","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":5},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/4"}},{"type":"ticket","id":5,"attributes":{"title":"odit laudantium repudiandae","status":"C","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":6},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/5"}},{"type":"ticket","id":6,"attributes":{"title":"officiis quam molestiae","status":"A","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":7},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/6"}},{"type":"ticket","id":7,"attributes":{"title":"eos ad ipsam","status":"X","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":8},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/7"}},{"type":"ticket","id":8,"attributes":{"title":"saepe minima quia","status":"X","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":4},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/8"}},{"type":"ticket","id":9,"attributes":{"title":"et qui distinctio","status":"A","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":6},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/9"}},{"type":"ticket","id":10,"attributes":{"title":"Second ticket title update new","status":"A","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:20:34.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":2},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/10"}},{"type":"ticket","id":11,"attributes":{"title":"et omnis laudantium","status":"X","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":10},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/11"}},{"type":"ticket","id":12,"attributes":{"title":"sint a atque","status":"A","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":9},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/12"}},{"type":"ticket","id":13,"attributes":{"title":"iure sed labore","status":"X","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":2},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/13"}},{"type":"ticket","id":14,"attributes":{"title":"quia ut ea","status":"A","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":6},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/14"}},{"type":"ticket","id":15,"attributes":{"title":"unde dolores nostrum","status":"A","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":7},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/15"}}],"links":{"first":"http:\/\/localhost\/api\/v1\/tickets?page=1","last":"http:\/\/localhost\/api\/v1\/tickets?page=8","prev":null,"next":"http:\/\/localhost\/api\/v1\/tickets?page=2"},"meta":{"current_page":1,"from":1,"last_page":8,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=5","label":"5","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=6","label":"6","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=7","label":"7","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=8","label":"8","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/tickets","per_page":15,"to":15,"total":115}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tickets
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Odio repudiandae doloremque beatae.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: X
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: repellendus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: praesentium
          description: 'Odio repudiandae doloremque beatae.'
          status: X
        relationships:
          author:
            data:
              id: repellendus
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"ticket","id":1,"attributes":{"title":"sint voluptas enim","description":"Possimus labore repudiandae omnis fugit earum. Officia at ut necessitatibus cupiditate id. Repudiandae molestias quas incidunt perspiciatis alias et.","status":"X","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"relationships":{"author":{"data":{"type":"authors","id":5},"links":{"self":"todo"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/tickets/{ticket_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Ad corporis non optio quia.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: X
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: reprehenderit
          description: 'Ad corporis non optio quia.'
          status: X
        relationships:
          author:
            data:
              id: ullam
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tickets/{ticket_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: false
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: false
        example: 'Dolorem ut et qui quis laudantium.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: false
        example: A
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: molestias
          description: 'Dolorem ut et qui quis laudantium.'
          status: A
        relationships:
          author:
            data: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"author","id":1,"attributes":{"name":"Letha McDermott","email":"brandyn05@example.net","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/1"}},{"type":"author","id":2,"attributes":{"name":"Mrs. Lea Altenwerth","email":"kacey.labadie@example.com","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}},{"type":"author","id":3,"attributes":{"name":"Shea Gutmann","email":"linnie.lowe@example.com","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}},{"type":"author","id":4,"attributes":{"name":"Dr. Evangeline Bogisich","email":"rolfson.una@example.org","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}},{"type":"author","id":5,"attributes":{"name":"Cole Gusikowski","email":"morissette.cameron@example.com","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/5"}},{"type":"author","id":6,"attributes":{"name":"Dr. Shaun Botsford","email":"rosetta48@example.com","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/6"}},{"type":"author","id":7,"attributes":{"name":"Amy Hermann PhD","email":"shanna.goodwin@example.org","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/7"}},{"type":"author","id":8,"attributes":{"name":"Mr. Misael Rogahn","email":"libby62@example.net","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/8"}},{"type":"author","id":9,"attributes":{"name":"Dr. Freddie Botsford V","email":"conroy.jerrell@example.org","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/9"}},{"type":"author","id":10,"attributes":{"name":"Elyssa Hayes","email":"alfredo.mclaughlin@example.org","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/10"}},{"type":"author","id":11,"attributes":{"name":"The Manger","email":"manger@example.com","isManger":true},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/11"}}],"links":{"first":"http:\/\/localhost\/api\/v1\/users?page=1","last":"http:\/\/localhost\/api\/v1\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/users?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/users","per_page":15,"to":11,"total":11}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: adelia.ruecker@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManger:
        name: data.attributes.isManger
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: 'tkyOG@G1V]'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: et
          email: adelia.ruecker@example.com
          isManger: false
          password: 'tkyOG@G1V]'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"author","id":1,"attributes":{"name":"Letha McDermott","email":"brandyn05@example.net","isManger":false},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: ronaldo.williamson@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManger:
        name: data.attributes.isManger
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: 'f$<qG.HhJKm?\+92p1z'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: dolorem
          email: ronaldo.williamson@example.org
          isManger: true
          password: 'f$<qG.HhJKm?\+92p1z'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: false
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: false
        example: graham.romaguera@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManger:
        name: data.attributes.isManger
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: false
        example: 8RB.8)
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: voluptatum
          email: graham.romaguera@example.com
          isManger: true
          password: 8RB.8)
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/authors
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"author","id":1,"attributes":{"name":"Letha McDermott","email":"brandyn05@example.net","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/1"}},{"type":"author","id":2,"attributes":{"name":"Mrs. Lea Altenwerth","email":"kacey.labadie@example.com","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}},{"type":"author","id":3,"attributes":{"name":"Shea Gutmann","email":"linnie.lowe@example.com","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}},{"type":"author","id":4,"attributes":{"name":"Dr. Evangeline Bogisich","email":"rolfson.una@example.org","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}},{"type":"author","id":5,"attributes":{"name":"Cole Gusikowski","email":"morissette.cameron@example.com","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/5"}},{"type":"author","id":6,"attributes":{"name":"Dr. Shaun Botsford","email":"rosetta48@example.com","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/6"}},{"type":"author","id":7,"attributes":{"name":"Amy Hermann PhD","email":"shanna.goodwin@example.org","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/7"}},{"type":"author","id":8,"attributes":{"name":"Mr. Misael Rogahn","email":"libby62@example.net","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/8"}},{"type":"author","id":9,"attributes":{"name":"Dr. Freddie Botsford V","email":"conroy.jerrell@example.org","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/9"}},{"type":"author","id":10,"attributes":{"name":"Elyssa Hayes","email":"alfredo.mclaughlin@example.org","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/10"}}],"links":{"first":"http:\/\/localhost\/api\/v1\/authors?page=1","last":"http:\/\/localhost\/api\/v1\/authors?page=8","prev":null,"next":"http:\/\/localhost\/api\/v1\/authors?page=2"},"meta":{"current_page":1,"from":1,"last_page":8,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/v1\/authors?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=5","label":"5","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=6","label":"6","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=7","label":"7","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=8","label":"8","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/authors","per_page":15,"to":10,"total":115}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/authors
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: oral.davis@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManger:
        name: data.attributes.isManger
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: 0I5H$uoS%
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: et
          email: oral.davis@example.org
          isManger: true
          password: 0I5H$uoS%
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/authors/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"author","id":1,"attributes":{"name":"Letha McDermott","email":"brandyn05@example.net","isManger":false,"emailVerifiedAt":"2024-06-15T13:17:59.000000Z","createdAt":"2024-06-15T13:17:59.000000Z","updatedAt":"2024-06-15T13:17:59.000000Z"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/authors/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: false
        example: magnam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: false
        example: joannie10@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManger:
        name: data.attributes.isManger
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: false
        example: "MYNrW*6JBxd';3c%~("
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: magnam
          email: joannie10@example.com
          isManger: false
          password: "MYNrW*6JBxd';3c%~("
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/authors/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/author/{author_id}/tickets'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      author_id: quae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/v1\/author\/quae\/tickets?page=1","last":"http:\/\/localhost\/api\/v1\/author\/quae\/tickets?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/author\/quae\/tickets?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/author\/quae\/tickets","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/author/{author_id}/tickets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      author_id: ut
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/author/{author}/tickets/{ticket_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author:
        name: author
        description: 'The author.'
        required: true
        example: fugiat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      author: fugiat
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Deserunt provident ut excepturi adipisci ipsum hic nisi.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: A
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: eos
          description: 'Deserunt provident ut excepturi adipisci ipsum hic nisi.'
          status: A
        relationships:
          author:
            data:
              id: similique
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/author/{author}/tickets/{ticket_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author:
        name: author
        description: 'The author.'
        required: true
        example: magni
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      author: magni
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: false
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: false
        example: 'Eum et perferendis tempora quia omnis nesciunt quia.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: false
        example: X
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: molestias
          description: 'Eum et perferendis tempora quia omnis nesciunt quia.'
          status: X
        relationships:
          author:
            data: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|FoAzGVJiZwlojcAmuc4uBKbRvpYbCj1M5Csa3gd604fb5b0e'
    controller: null
    method: null
    route: null
    custom: []
